USAGE NOTES FOR PSICOV V1.10D

(See LICENSE file for details on licensing terms)


Compiling
=========

Run make.


Typical usage
=============

psicov -p -r 0.001 demo.aln > output

(Run with fixed default rho and estimate precision - this is a sensible default for most cases)


psicov -p -d 0.03 demo.aln > output

(Run with target precision matrix density of 3% rather than fixed rho - can be slow but can improve results slightly)


psicov -p -r 0.001 -j 12 demo.aln > output

(Only output contacts separated by 12 or more in the sequence)


psicov -p -r 0.001 -g 0.3 demo.aln > output

(Ignore alignment columns with > 30% gaps)


********************************************************************************************************

Recommended options for quicker exact results (quick enough for large proteins):

psicov -p -r 0.001 demo.aln > output

********************************************************************************************************

Recommended options for quicker approximate results (quick enough for very large proteins/large alignments):

psicov -a -r 0.001 -i 62 demo.aln > output

********************************************************************************************************

Recommended options for slower but more accurate results (probably too slow for large proteins):

psicov -p -d 0.03 demo.aln > output

These options select the glasso exact algorithm, target contact density of 3% and by default, corrects the
the BLOSUM weighting cutoff for highly conserved or very divergent families. It also attempts to estimate
PPV (precision) for each predicted contact rather than outputting arbitrary raw scores.

********************************************************************************************************


Example using HHBLITS
=====================

Here is a simple 3-step example of predicting contacts for a target sequence using HHBLITS as the alignment
method (using the UniRef20 database). HHBLITS can be obtained from ftp://toolkit.genzentrum.lmu.de/pub/HH-suite
See HHBLITS documentation for installation instructions.

1. Search UniRef20 database and produce alignment in A3M format:
hhblits -i example.fasta -d uniprot20_2012_03 -oa3m example.a3m -mact 0 -n 3 -diff inf -cov 60

2. Quick command line conversion from A3M to PSICOV alignment format - also remove duplicate sequences:
egrep -v "^>" example.a3m | sed 's/[a-z]//g' | sort -u > example.aln

3. Run PSICOV as previously described:
psicov -p -r 0.001 example.aln > example.psicov

DIRICHLET MODIFICATION
======================

Here, the pseudocounts used in the covariance matrix are replaced with Dirichlet distribution priors generated
from the comp files in the data directory. The following command line flags are added (defaults should be fine):

-x file	: location of alphabet file (default data/std.alphabet)
-z file	: location of mixture file (default data/byst-4.5-0-3.9comp)
-s nnn	: dirichlet scaling factor (default 5)

See http://compbio.soe.ucsc.edu/dirichlets/ for details on the comp files.

Performance has been tested on CASP10 targets. Out of 94 targets, contact prediction compared to regular PSICOV
was improved in 56 cases (59.6%), made worse in 25 cases (26.6%) and unchanged in 13 cases (13.8%).

Please note the license information in the LICENSE file.


IMPORTANT NOTES
===============

Please note that a large number of _diverse_ homologous sequences are needed for contact prediction to succeed. In
the original paper, the worst example had 511 homologous sequences and the best had 74836. If you try to calculate
contacts with very few sequences, then at best the results will be poor, or at worst psicov will not be able to
converge on a solution and keep running forever! In the latter case, convergence can be achieved by increasing the
rho parameter to 0.005 or 0.01 say (default is 0.001) e.g. psicov -r 0.005 -i 62 demo.aln > output

However, even if PSICOV does converge this will not necessarily produce good contact predictions - you cannot
avoid the issue of needing a lot of sequence data to properly compute the initial covariance matrix.

PSICOV will give an error if an alignment with too few sequences is used, and will also print a warning if there is
insufficient sequence variation. You can override these checks by modifying the code, but bear in mind that
PSICOV can only work well with VERY LARGE sequence families. If you only have a handful of sequences, or if the sequences
are all very similar, then you simply do not have enough data to analyse. For best results you need a sequence
alignment with >1000 sequences and a large amount of sequence variation between the sequences.

Also note that for long sequences, PSICOV will require a large amount of RAM (and a 64-bit system) to handle the
covariance matrices. For example, a target sequence of 300 residues will require nearly 3 Gb of RAM. The number of
sequences in the alignment, on the other hand, has relatively little effect on memory usage.
